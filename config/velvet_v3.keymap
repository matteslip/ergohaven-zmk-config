#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <160>;
            flavor = "balanced";
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 41>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40>;
        };

        as_ht: as_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "AS_HT";
            bindings = <&shift>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
        };

        fmt: fmt {
            compatible = "zmk,behavior-hold-tap";
            label = "FMT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
        };

        hmlsh: hmlsh {
            compatible = "zmk,behavior-hold-tap";
            label = "HMLSH";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 41 40>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hmlct: hmlct {
            compatible = "zmk,behavior-hold-tap";
            label = "HMLCT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 41 27 28>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        mosk: mosk {
            compatible = "zmk,behavior-hold-tap";
            label = "MOSK";
            bindings = <&mo>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "balanced";
            hold-while-undecided;
            quick-tap-ms = <125>;
        };

        moskSE: moskSE {
            compatible = "zmk,behavior-tap-dance";
            label = "MOSKSE";
            #binding-cells = <0>;
            bindings = <&mosk 4 RIGHT_SHIFT>, <&kp LS(ENTER)>;

            tapping-term-ms = <190>;
        };

        select_word: select_word {
            compatible = "zmk,behavior-mod-morph";
            label = "SELECT_WORD";
            bindings = <&select_word_right>, <&select_word_left>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        extend_word: extend_word {
            compatible = "zmk,behavior-mod-morph";
            label = "EXTEND_WORD";
            bindings = <&extend_right>, <&extend_left>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        pastemac {
            bindings = <&sk LS(LA(LEFT_CONTROL))>;
            key-positions = <44 45>;
        };

        senter {
            bindings = <&kp LS(ENTER)>;
            key-positions = <36 37>;
        };
    };

    macros {
        as: as {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AS";
        };

        shift: shift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "SHIFT";
        };

        select_word_left: sel_wrd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LEFT_CONTROL &kp RIGHT>,
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT &kp LEFT_ARROW>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT &kp LEFT_ARROW>;

            label = "sel_wrd";
        };

        select_word_right: sel_wrd_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LEFT_CONTROL &kp LEFT_ARROW>,
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT &kp RIGHT_ARROW>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT &kp RIGHT_ARROW>;

            label = "sel_wrd_right";
        };

        extend_left: extend_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT &kp LEFT_ARROW>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT &kp LEFT_ARROW>;

            label = "EXTEND_LEFT";
        };

        extend_right: extend_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT &kp RIGHT_ARROW>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_CONTROL &kp LEFT_SHIFT &kp RIGHT_ARROW>;

            label = "EXTEND_RIGHT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp ESC     &kp Q                &kp W                  &kp E            &kp R            &kp T                                &kp Y                          &kp U             &kp I             &kp O         &kp P                  &kp LEFT_BRACKET
&kp TAB     &hmlsh LEFT_SHIFT A  &hmlct LEFT_CONTROL S  &hml LEFT_GUI D  &hml LEFT_ALT F  &kp G                                &kp H                          &hmr RIGHT_ALT J  &hmr RIGHT_GUI K  &hmr RCTRL L  &hmr RIGHT_SHIFT SEMI  &kp SQT
&caps_word  &kp Z                &kp X                  &kp C            &kp V            &kp B                                &kp N                          &kp M             &kp COMMA         &kp DOT       &as SLASH              &kp RIGHT_BRACKET
                                 &kp GRAVE              &kp DELETE       &lt 1 SPACE      &kp BACKSPACE  &kp ENTER    &moskSE  &mt RC(RIGHT_SHIFT) RG(SPACE)  &lt 2 SPACE       &kp MINUS         &kp EQUAL
            >;

            display-name = "Base";
        };

        nav {
            bindings = <
&trans    &as N1                   &as N2                     &as N3               &as N4               &as N5                         &as N6      &as N7        &as N8         &as N9        &as N0         &trans
&kp INS   &hmlsh LEFT_SHIFT LC(A)  &hmlct LEFT_CONTROL RC(S)  &hml LEFT_GUI LC(D)  &hml LEFT_ALT LC(F)  &kp K_PASTE                    &kp K_FIND  &kp LEFT      &kp DOWN       &kp UP        &kp RIGHT      &trans
&kp CLCK  &kp LC(Z)                &kp LC(X)                  &kp LC(C)            &kp LC(V)            &kp K_COPY                     &kp K_CUT   &kp LC(LEFT)  &kp PAGE_DOWN  &kp PAGE_UP   &kp LC(RIGHT)  &trans
                                   &kp HOME                   &kp END              &trans               &trans       &trans    &trans  &trans      &trans        &select_word   &extend_word
            >;

            display-name = "Navigation";
        };

        sym {
            bindings = <
&trans  &trans    &kp LT            &kp EQUAL  &kp GT             &kp GRAVE                      &kp CARET  &kp DQT   &kp UNDER  &kp SQT   &trans    &trans
&trans  &kp BSLH  &kp LPAR          &kp MINUS  &kp RPAR           &kp PLUS                       &kp PRCNT  &kp LBRC  &kp SEMI   &kp RBRC  &kp EXCL  &kp QUESTION
&trans  &trans    &kp LEFT_BRACKET  &kp COLON  &kp RIGHT_BRACKET  &kp DLLR                       &kp AT     &kp PIPE  &kp TILDE  &kp AMPS  &trans    &trans
                  &kp STAR          &kp SLASH  &trans             &trans     &kp HASH    &trans  &trans     &trans    &trans     &trans
            >;

            display-name = "Symbols";
        };

        adj {
            bindings = <
&bootloader  &none  &kp F7  &kp F8  &kp F9  &kp F10                  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none        &none  &kp F4  &kp F5  &kp F6  &kp F11                  &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &none         &studio_unlock
&none        &none  &kp F1  &kp F2  &kp F3  &kp F12                  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &none         &none
                    &none   &none   &trans  &none    &none    &none  &none         &none         &none             &none
            >;

            display-name = "Adjust";
        };

        num {
            bindings = <
&kp KP_NLCK      &trans         &kp KP_N7  &kp KP_N8   &kp KP_N9  &trans                         &trans  &trans          &trans          &trans        &trans           &trans
&kp KP_MULTIPLY  &kp KP_DIVIDE  &kp KP_N4  &kp KP_N5   &kp KP_N6  &kp KP_COMMA                   &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &trans
&kp KP_SUBTRACT  &kp KP_PLUS    &kp KP_N1  &kp KP_N2   &kp KP_N3  &kp KP_EQUAL                   &trans  &trans          &trans          &trans        &trans           &trans
                                &kp KP_N0  &kp KP_DOT  &trans     &trans        &to 0    &trans  &trans  &trans          &trans          &trans
            >;

            display-name = "Numpad";
        };

        User1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "User1";
        };

        User2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "User2";
        };

        User3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "User3";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adj {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
